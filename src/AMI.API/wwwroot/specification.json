{
  "x-generator": "NSwag v12.3.1.0 (NJsonSchema v9.14.1.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "AMI API",
    "version": "0.0.1"
  },
  "paths": {
    "/app-info": {
      "get": {
        "tags": [
          "AppInfo"
        ],
        "summary": "Get application information",
        "operationId": "AppInfo_Get",
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "The application information",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AppInfo"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/objects/{id}/process": {
      "put": {
        "tags": [
          "Objects"
        ],
        "summary": "Processes an existing object.",
        "operationId": "Objects_Process",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "command",
          "description": "The command to process an existing object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessObjectCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "The status of the processing.",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProcessResult"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/upload/resumable": {
      "post": {
        "tags": [
          "Upload"
        ],
        "summary": "The resumable upload endpoint.",
        "operationId": "Upload_ResumableUpload",
        "parameters": [
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "required": true,
            "description": "The file.",
            "schema": {
              "type": "string",
              "format": "binary",
              "nullable": true
            },
            "nullable": true
          },
          {
            "name": "chunkNumber",
            "in": "query",
            "required": true,
            "description": "The chunk number.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "chunkSize",
            "in": "query",
            "required": true,
            "description": "The size of the chunk.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "currentChunkSize",
            "in": "query",
            "required": true,
            "description": "The size of the current chunk.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "totalSize",
            "in": "query",
            "required": true,
            "description": "The total size of the upload.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "resumableType",
            "in": "query",
            "required": true,
            "description": "The name of the file type.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "uid",
            "in": "query",
            "required": true,
            "description": "The unique identifier.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "description": "The filename.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "relativePath",
            "in": "query",
            "required": true,
            "description": "The relative path.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "totalChunks",
            "in": "query",
            "required": true,
            "description": "The total chunks.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 9
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/values": {
      "get": {
        "tags": [
          "Values"
        ],
        "summary": "Gets a list of values.",
        "operationId": "Values_Get",
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Values"
        ],
        "summary": "Posts the specified value.",
        "operationId": "Values_Post",
        "requestBody": {
          "x-name": "value",
          "description": "The value.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/values/{id}": {
      "get": {
        "tags": [
          "Values"
        ],
        "summary": "Gets value with the specified identifier.",
        "operationId": "Values_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Values"
        ],
        "summary": "Puts the value with the specified identifier.",
        "operationId": "Values_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "value",
          "description": "The value.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Values"
        ],
        "summary": "Deletes the value with the specified identifier.",
        "operationId": "Values_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResult"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResult": {
        "type": "object",
        "description": "A model representing an error result.",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string",
            "description": "Gets or sets the error.",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "description": "Gets or sets the validation errors.",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "stackTrace": {
            "type": "string",
            "description": "Gets or sets the stack trace.",
            "nullable": true
          }
        }
      },
      "AppInfo": {
        "type": "object",
        "description": "A model containing information about the application.",
        "additionalProperties": false,
        "properties": {
          "appName": {
            "type": "string",
            "description": "Gets the name of the application.",
            "nullable": true
          },
          "appVersion": {
            "type": "string",
            "description": "Gets the application version.",
            "nullable": true
          }
        }
      },
      "ProcessResult": {
        "type": "object",
        "description": "A model containing information about the result of the processing.",
        "additionalProperties": false,
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the application version.",
            "nullable": true
          },
          "labelCount": {
            "type": "integer",
            "description": "Gets or sets the label count.",
            "format": "int32"
          },
          "images": {
            "type": "array",
            "description": "Gets or sets the position axis containers of the images.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PositionAxisContainerOfString"
            }
          },
          "gifs": {
            "type": "array",
            "description": "Gets or sets the axis containers of the GIF images.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AxisContainerOfString"
            }
          },
          "combinedGif": {
            "type": "string",
            "description": "Gets or sets the combined GIF.",
            "nullable": true
          },
          "jsonFilename": {
            "type": "string",
            "description": "Gets or sets the JSON filename.",
            "nullable": true
          }
        }
      },
      "PositionAxisContainerOfString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AxisContainerOfString"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "position": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "AxisContainerOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "axisType": {
            "$ref": "#/components/schemas/AxisType"
          },
          "entity": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AxisType": {
        "type": "integer",
        "description": "The different axis types of the coordinate system.",
        "x-enumNames": [
          "X",
          "Y",
          "Z"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "ProcessObjectCommand": {
        "type": "object",
        "description": "A command containing information needed for processing.",
        "additionalProperties": false,
        "properties": {
          "desiredSize": {
            "type": "integer",
            "description": "Gets or sets the desired size of the processed images.",
            "nullable": true
          },
          "amountPerAxis": {
            "type": "integer",
            "description": "Gets or sets the amount of images per axis."
          },
          "sourcePath": {
            "type": "string",
            "description": "Gets or sets the source path.",
            "nullable": true
          },
          "watermarkSourcePath": {
            "type": "string",
            "description": "Gets or sets the source path of the watermark.",
            "nullable": true
          },
          "destinationPath": {
            "type": "string",
            "description": "Gets or sets the destination path.",
            "nullable": true
          },
          "axisTypes": {
            "type": "array",
            "description": "Gets the axis types to be considered.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AxisType"
            }
          },
          "imageFormat": {
            "description": "Gets or sets the image format.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ImageFormat"
              }
            ]
          },
          "bezierEasingTypePerAxis": {
            "description": "Gets or sets the Bézier easing type per axis used for the animated image.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BezierEasingType"
              }
            ]
          },
          "bezierEasingTypeCombined": {
            "description": "Gets or sets the Bézier easing type used for the combined animated image.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BezierEasingType"
              }
            ]
          },
          "grayscale": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the images should be converted to grayscale."
          },
          "openCombinedGif": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the combined animated image should be opened after the processing."
          }
        }
      },
      "ImageFormat": {
        "type": "integer",
        "description": "A type to describe the image format.",
        "x-enumNames": [
          "Jpeg",
          "Png"
        ],
        "enum": [
          0,
          1
        ]
      },
      "BezierEasingType": {
        "type": "integer",
        "description": "A type to describe the Bézier curve easing.",
        "x-enumNames": [
          "Linear",
          "EaseInCubic",
          "EaseOutCubic",
          "EaseInOutCubic",
          "EaseInQuart",
          "EaseOutQuart",
          "EaseInOutQuart"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      }
    }
  }
}