{
  "x-generator": "NSwag v13.0.1.0 (NJsonSchema v10.0.19.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "AMI API",
    "version": "0.0.1"
  },
  "paths": {
    "/app-info": {
      "get": {
        "tags": [
          "AppInfo"
        ],
        "summary": "Get application information",
        "operationId": "AppInfo_Get",
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The application information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfo"
                }
              }
            }
          }
        }
      }
    },
    "/objects": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Gets a paginated list of objects.",
        "operationId": "Objects_GetPaginated",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "description": "The current page",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "description": "The limit to constrain the number of items.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The list of paginated objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResultModelOfObjectModel"
                }
              }
            }
          }
        }
      }
    },
    "/objects/{id}": {
      "put": {
        "tags": [
          "Objects"
        ],
        "summary": "Gets the information of the object with the specified identifier.",
        "operationId": "Objects_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the object.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The information of the object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectModel"
                }
              }
            }
          }
        }
      }
    },
    "/objects/{id}/process": {
      "put": {
        "tags": [
          "Objects"
        ],
        "summary": "Processes an existing object.",
        "operationId": "Objects_Process",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the object.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "description": "The command to process an existing object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessObjectAsyncCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The created task.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                }
              }
            }
          }
        }
      }
    },
    "/objects/upload": {
      "post": {
        "tags": [
          "Objects"
        ],
        "summary": "Uploads an object.",
        "operationId": "Objects_Upload",
        "parameters": [
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "required": true,
            "description": "The file.",
            "schema": {
              "type": "string",
              "format": "binary",
              "nullable": true
            },
            "nullable": true
          },
          {
            "name": "chunkNumber",
            "in": "query",
            "required": true,
            "description": "The chunk number.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "totalSize",
            "in": "query",
            "required": true,
            "description": "The total size of the upload.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "uid",
            "in": "query",
            "required": true,
            "description": "The unique identifier.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "description": "The filename.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "relativePath",
            "in": "query",
            "required": true,
            "description": "The relative path.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "totalChunks",
            "in": "query",
            "required": true,
            "description": "The total chunks.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The result of the resumable upload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectModel"
                }
              }
            }
          }
        }
      }
    },
    "/values": {
      "get": {
        "tags": [
          "Values"
        ],
        "summary": "Gets a list of values.",
        "operationId": "Values_Get",
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Values"
        ],
        "summary": "Posts the specified value.",
        "operationId": "Values_Post",
        "requestBody": {
          "x-name": "value",
          "description": "The value.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/values/{id}": {
      "get": {
        "tags": [
          "Values"
        ],
        "summary": "Gets value with the specified identifier.",
        "operationId": "Values_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Values"
        ],
        "summary": "Puts the value with the specified identifier.",
        "operationId": "Values_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "value",
          "description": "The value.",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Values"
        ],
        "summary": "Deletes the value with the specified identifier.",
        "operationId": "Values_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorModel": {
        "type": "object",
        "description": "A model representing an error.",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string",
            "description": "Gets or sets the error.",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "description": "Gets or sets the validation errors.",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "stackTrace": {
            "type": "string",
            "description": "Gets or sets the stack trace.",
            "nullable": true
          }
        }
      },
      "AppInfo": {
        "type": "object",
        "description": "A model containing information about the application.",
        "additionalProperties": false,
        "properties": {
          "appName": {
            "type": "string",
            "description": "Gets the name of the application.",
            "nullable": true
          },
          "appVersion": {
            "type": "string",
            "description": "Gets the application version.",
            "nullable": true
          }
        }
      },
      "PaginationResultModelOfObjectModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ObjectModel"
            }
          },
          "pagination": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaginationModel"
              }
            ]
          }
        }
      },
      "ObjectModel": {
        "type": "object",
        "description": "A model representing an object.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the created date.",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Gets or sets the modified date.",
            "format": "date-time"
          },
          "dataType": {
            "description": "Gets or sets the type of the data.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DataType"
              }
            ]
          },
          "fileFormat": {
            "description": "Gets or sets the file format.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FileFormat"
              }
            ]
          },
          "originalFilename": {
            "type": "string",
            "description": "Gets or sets the original filename.",
            "nullable": true
          },
          "sourcePath": {
            "type": "string",
            "description": "Gets or sets the source path (directory, file, url, etc.).",
            "nullable": true
          },
          "uncompressedPath": {
            "type": "string",
            "description": "Gets or sets the uncompressed path (directory).",
            "nullable": true
          },
          "latestTask": {
            "description": "Gets or sets the latest task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskModel"
              }
            ]
          }
        }
      },
      "DataType": {
        "type": "integer",
        "description": "A type to describe the data.",
        "x-enumNames": [
          "Unknown",
          "RawImage",
          "SegmentationImage"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "FileFormat": {
        "type": "integer",
        "description": "A type to describe the file format.",
        "x-enumNames": [
          "Unknown",
          "Dicom",
          "DicomMultiframe",
          "Analyze",
          "MetaImage",
          "Nifti"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "TaskModel": {
        "type": "object",
        "description": "A model containing information about the task.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the created date.",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Gets or sets the modified date.",
            "format": "date-time"
          },
          "status": {
            "description": "Gets or sets the status.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskStatus"
              }
            ]
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message describing the error.",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "description": "Gets or sets the position in queue.",
            "format": "int32"
          },
          "progress": {
            "type": "integer",
            "description": "Gets or sets the progress (0-100).",
            "format": "int32"
          },
          "command": {
            "description": "Gets or sets the command used to create this task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseCommand"
              }
            ]
          },
          "result": {
            "description": "Gets or sets the result associated with this task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseResultModel"
              }
            ]
          },
          "object": {
            "description": "Gets or sets the object associated with this task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ObjectModel"
              }
            ]
          }
        }
      },
      "TaskStatus": {
        "type": "integer",
        "description": "The different states of a task.",
        "x-enumNames": [
          "Created",
          "Queued",
          "Processing",
          "Canceled",
          "Failed",
          "Finished"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "BaseCommand": {
        "type": "object",
        "description": "The base all commands have in common.",
        "additionalProperties": false,
        "properties": {
          "commandType": {
            "description": "Gets the type of the command.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CommandType"
              }
            ]
          }
        }
      },
      "CommandType": {
        "type": "integer",
        "description": "A type to describe the command.",
        "x-enumNames": [
          "Unknown",
          "ProcessPathCommand",
          "ProcessObjectCommand",
          "ProcessObjectAsyncCommand"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "ProcessObjectCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseProcessCommandOfProcessResultModel"
          },
          {
            "type": "object",
            "description": "A command containing information needed to process objects.",
            "additionalProperties": false,
            "properties": {
              "commandType": {
                "description": "Gets the type of the command.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CommandType"
                  }
                ]
              },
              "id": {
                "type": "string",
                "description": "Gets or sets the identifier of the object.",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseProcessCommandOfProcessResultModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseCommand"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "desiredSize": {
                "type": "integer",
                "nullable": true
              },
              "amountPerAxis": {
                "type": "integer"
              },
              "axisTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/AxisType"
                }
              },
              "imageFormat": {
                "$ref": "#/components/schemas/ImageFormat"
              },
              "bezierEasingTypePerAxis": {
                "$ref": "#/components/schemas/BezierEasingType"
              },
              "bezierEasingTypeCombined": {
                "$ref": "#/components/schemas/BezierEasingType"
              },
              "grayscale": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "AxisType": {
        "type": "integer",
        "description": "The different axis types of the coordinate system.",
        "x-enumNames": [
          "X",
          "Y",
          "Z"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "ImageFormat": {
        "type": "integer",
        "description": "A type to describe the image format.",
        "x-enumNames": [
          "Unknown",
          "Jpeg",
          "Png"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "BezierEasingType": {
        "type": "integer",
        "description": "A type to describe the Bézier curve easing.",
        "x-enumNames": [
          "None",
          "Linear",
          "EaseInCubic",
          "EaseOutCubic",
          "EaseInOutCubic",
          "EaseInQuart",
          "EaseOutQuart",
          "EaseInOutQuart"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      "ProcessObjectAsyncCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseProcessCommandOfTaskModel"
          },
          {
            "type": "object",
            "description": "A command containing information needed to process objects.",
            "additionalProperties": false,
            "properties": {
              "commandType": {
                "description": "Gets the type of the command.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CommandType"
                  }
                ]
              },
              "id": {
                "type": "string",
                "description": "Gets or sets the identifier of the object.",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseProcessCommandOfTaskModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseCommand"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "desiredSize": {
                "type": "integer",
                "nullable": true
              },
              "amountPerAxis": {
                "type": "integer"
              },
              "axisTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/AxisType"
                }
              },
              "imageFormat": {
                "$ref": "#/components/schemas/ImageFormat"
              },
              "bezierEasingTypePerAxis": {
                "$ref": "#/components/schemas/BezierEasingType"
              },
              "bezierEasingTypeCombined": {
                "$ref": "#/components/schemas/BezierEasingType"
              },
              "grayscale": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "ProcessPathCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseProcessCommandOfProcessResultModel"
          },
          {
            "type": "object",
            "description": "A command containing information needed to process paths (directory, file, url, etc.).",
            "additionalProperties": false,
            "properties": {
              "commandType": {
                "description": "Gets the type of the command.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CommandType"
                  }
                ]
              },
              "sourcePath": {
                "type": "string",
                "description": "Gets or sets the source path.",
                "nullable": true
              },
              "watermarkSourcePath": {
                "type": "string",
                "description": "Gets or sets the source path of the watermark.",
                "nullable": true
              },
              "destinationPath": {
                "type": "string",
                "description": "Gets or sets the destination path.",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseResultModel": {
        "type": "object",
        "description": "The base all results have in common.",
        "additionalProperties": false,
        "properties": {
          "resultType": {
            "description": "Gets the type of the result.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResultType"
              }
            ]
          }
        }
      },
      "ResultType": {
        "type": "integer",
        "description": "A type to describe the command.",
        "x-enumNames": [
          "Unknown",
          "ProcessResult"
        ],
        "enum": [
          0,
          1
        ]
      },
      "ProcessResultModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResultModel"
          },
          {
            "type": "object",
            "description": "A model containing information about the result of the image processing.",
            "additionalProperties": false,
            "properties": {
              "resultType": {
                "$ref": "#/components/schemas/ResultType"
              },
              "labelCount": {
                "type": "integer",
                "description": "Gets or sets the label count.",
                "format": "int32"
              },
              "images": {
                "type": "array",
                "description": "Gets or sets the images.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PositionAxisContainerModelOfString"
                }
              },
              "gifs": {
                "type": "array",
                "description": "Gets or sets the axis containers of the GIF images.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/AxisContainerModelOfString"
                }
              },
              "combinedGif": {
                "type": "string",
                "description": "Gets or sets the combined GIF.",
                "nullable": true
              }
            }
          }
        ]
      },
      "PositionAxisContainerModelOfString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AxisContainerModelOfString"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "position": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "AxisContainerModelOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "axisType": {
            "$ref": "#/components/schemas/AxisType"
          },
          "entity": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResultModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResultModel"
          },
          {
            "type": "object",
            "description": "A model containing information about the result of the processing.",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "Gets or sets the identifier.",
                "nullable": true
              },
              "createdDate": {
                "type": "string",
                "description": "Gets or sets the created date.",
                "format": "date-time"
              },
              "modifiedDate": {
                "type": "string",
                "description": "Gets or sets the modified date.",
                "format": "date-time"
              },
              "version": {
                "type": "string",
                "description": "Gets or sets the application version.",
                "nullable": true
              },
              "jsonFilename": {
                "type": "string",
                "description": "Gets or sets the JSON filename.",
                "nullable": true
              }
            }
          }
        ]
      },
      "PaginationModel": {
        "type": "object",
        "description": "A model containing information about the pagination.",
        "additionalProperties": false,
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Gets or sets the limit to constrain the number of items.",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Gets or sets the total amount of items.",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "Gets or sets the current page number.",
            "format": "int32"
          }
        }
      }
    }
  }
}