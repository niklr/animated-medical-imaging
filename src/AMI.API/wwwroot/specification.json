{
  "x-generator": "NSwag v13.0.1.0 (NJsonSchema v10.0.19.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "AMI API",
    "version": "0.0.1"
  },
  "paths": {
    "/api-options": {
      "get": {
        "tags": [
          "ApiOptions"
        ],
        "summary": "Gets the API options.",
        "operationId": "ApiOptions_Get",
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The API options.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiOptions"
                }
              }
            }
          }
        }
      }
    },
    "/app-info": {
      "get": {
        "tags": [
          "AppInfo"
        ],
        "summary": "Gets the application information.",
        "operationId": "AppInfo_Get",
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The application information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfo"
                }
              }
            }
          }
        }
      }
    },
    "/app-options": {
      "get": {
        "tags": [
          "AppOptions"
        ],
        "summary": "Gets the application options.",
        "operationId": "AppOptions_Get",
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The application options.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppOptions"
                }
              }
            }
          }
        }
      }
    },
    "/objects": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Gets a paginated list of objects.",
        "operationId": "Objects_GetPaginated",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "description": "The current page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "description": "The limit to constrain the number of items.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The list of paginated objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResultModelOfObjectModel"
                }
              }
            }
          }
        }
      }
    },
    "/objects/{id}": {
      "get": {
        "tags": [
          "Objects"
        ],
        "summary": "Gets the information of the object with the specified identifier.",
        "operationId": "Objects_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the object.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The information of the object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Objects"
        ],
        "summary": "Deletes the object with the specified identifier.",
        "operationId": "Objects_DeleteById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the object.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "No content.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectModel"
                }
              }
            }
          }
        }
      }
    },
    "/objects/upload": {
      "post": {
        "tags": [
          "Objects"
        ],
        "summary": "Uploads an object.",
        "operationId": "Objects_Upload",
        "parameters": [
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "required": true,
            "description": "The file.",
            "schema": {
              "type": "string",
              "format": "binary",
              "nullable": true
            },
            "nullable": true
          },
          {
            "name": "chunkNumber",
            "in": "query",
            "required": true,
            "description": "The chunk number.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "totalSize",
            "in": "query",
            "required": true,
            "description": "The total size of the upload.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "uid",
            "in": "query",
            "required": true,
            "description": "The unique identifier.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "description": "The filename.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "relativePath",
            "in": "query",
            "required": true,
            "description": "The relative path.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "totalChunks",
            "in": "query",
            "required": true,
            "description": "The total chunks.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 6
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The result of the resumable upload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectModel"
                }
              }
            }
          }
        }
      }
    },
    "/results/{id}": {
      "get": {
        "tags": [
          "Results"
        ],
        "summary": "Gets the information of the result with the specified identifier.",
        "operationId": "Results_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the result.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The information of the result.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/results/{id}/images/{filename}": {
      "get": {
        "tags": [
          "Results"
        ],
        "summary": "Gets the image of the result with the specified identifier.",
        "operationId": "Results_GetImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the object.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "description": "The name of the file.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The information of the object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              }
            }
          }
        }
      }
    },
    "/results/{id}/download": {
      "get": {
        "tags": [
          "Results"
        ],
        "summary": "Downloads the result with the specified identifier as a ZIP.",
        "operationId": "Results_DownloadById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The result as a ZIP.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stream"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Gets the information of the task with the specified identifier.",
        "operationId": "Tasks_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The identifier of the task.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "200": {
            "description": "The information of the task.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Creates a new task.",
        "operationId": "Tasks_Create",
        "requestBody": {
          "x-name": "command",
          "description": "The command to create a new task.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          },
          "201": {
            "description": "The created task.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorModel": {
        "type": "object",
        "description": "A model representing an error.",
        "additionalProperties": false,
        "properties": {
          "error": {
            "type": "string",
            "description": "Gets or sets the error.",
            "nullable": true
          },
          "validationErrors": {
            "type": "object",
            "description": "Gets or sets the validation errors.",
            "nullable": true,
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "stackTrace": {
            "type": "string",
            "description": "Gets or sets the stack trace.",
            "nullable": true
          }
        }
      },
      "ApiOptions": {
        "type": "object",
        "description": "The API options.",
        "additionalProperties": false,
        "properties": {
          "connectingIpHeaderName": {
            "type": "string",
            "description": "Gets the name of header used to identify the IP address of the connecting client.",
            "nullable": true
          },
          "isDevelopment": {
            "type": "boolean",
            "description": "Gets a value indicating whether the current environment is development."
          },
          "ipRateLimiting": {
            "description": "Gets the options used to limit the rate based on the IP address of the client.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IIpRateLimitOptions"
              }
            ]
          },
          "ipRateLimitPolicies": {
            "description": "Gets the policies used to limit the rate base on the IP address of the client.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IIpRateLimitPolicies"
              }
            ]
          }
        }
      },
      "IIpRateLimitOptions": {
        "type": "object",
        "description": "An interface representing the options to limit the rate based on the IP address of the client.\nSource: https://github.com/stefanprodan/AspNetCoreRateLimit",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "realIpHeader": {
            "type": "string",
            "description": "Gets the HTTP header of the real ip header injected by reverse proxy, by default is X-Real-IP",
            "nullable": true
          },
          "clientIdHeader": {
            "type": "string",
            "description": "Gets the HTTP header that holds the client identifier, by default is X-ClientId",
            "nullable": true
          },
          "ipPolicyPrefix": {
            "type": "string",
            "description": "Gets the policy prefix, used to compose the client policy cache key",
            "nullable": true
          },
          "ipWhitelist": {
            "type": "array",
            "description": "Gets the ip whitelist.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IIpRateLimitPolicies": {
        "type": "object",
        "description": "An interface representing the policies used to limit the rate base on the IP address of the client.\nSource: https://github.com/stefanprodan/AspNetCoreRateLimit",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "ipRules": {
            "type": "array",
            "description": "Gets the rules to limit the rate based on the IP address of the client.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IIpRateLimitPolicy"
            }
          }
        }
      },
      "IIpRateLimitPolicy": {
        "type": "object",
        "description": "An interface representing the policy to limit the rate based on the IP address of the client.\nSource: https://github.com/stefanprodan/AspNetCoreRateLimit",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "ip": {
            "type": "string",
            "description": "Gets the IP address.",
            "nullable": true
          }
        }
      },
      "AppInfo": {
        "type": "object",
        "description": "A model containing information about the application.",
        "additionalProperties": false,
        "properties": {
          "appName": {
            "type": "string",
            "description": "Gets the name of the application.",
            "nullable": true
          },
          "appVersion": {
            "type": "string",
            "description": "Gets the application version.",
            "nullable": true
          }
        }
      },
      "AppOptions": {
        "type": "object",
        "description": "The application options.",
        "additionalProperties": false,
        "properties": {
          "maxSizeKilobytes": {
            "type": "integer",
            "description": "Gets the maximum size in kilobytes.",
            "format": "int32"
          },
          "maxCompressedEntries": {
            "type": "integer",
            "description": "Gets the maximum of compressed entries.",
            "format": "int32"
          },
          "timeoutMilliseconds": {
            "type": "integer",
            "description": "Gets the timeout in milliseconds.",
            "format": "int32"
          },
          "workingDirectory": {
            "type": "string",
            "description": "Gets the working directory.",
            "nullable": true
          }
        }
      },
      "PaginationResultModelOfObjectModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ObjectModel"
            }
          },
          "pagination": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PaginationModel"
              }
            ]
          }
        }
      },
      "ObjectModel": {
        "type": "object",
        "description": "A model representing an object.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the created date.",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Gets or sets the modified date.",
            "format": "date-time"
          },
          "dataType": {
            "description": "Gets or sets the type of the data.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DataType"
              }
            ]
          },
          "fileFormat": {
            "description": "Gets or sets the file format.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FileFormat"
              }
            ]
          },
          "originalFilename": {
            "type": "string",
            "description": "Gets or sets the original filename.",
            "nullable": true
          },
          "sourcePath": {
            "type": "string",
            "description": "Gets or sets the source path (directory, file, url, etc.).",
            "nullable": true
          },
          "uncompressedPath": {
            "type": "string",
            "description": "Gets or sets the uncompressed path (directory).",
            "nullable": true
          },
          "latestTask": {
            "description": "Gets or sets the latest task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskModel"
              }
            ]
          }
        }
      },
      "DataType": {
        "type": "integer",
        "description": "A type to describe the data.",
        "x-enumNames": [
          "Unknown",
          "RawImage",
          "SegmentationImage"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "FileFormat": {
        "type": "integer",
        "description": "A type to describe the file format.",
        "x-enumNames": [
          "Unknown",
          "Dicom",
          "Analyze",
          "MetaImage",
          "Nifti",
          "Rar",
          "Zip",
          "Tar",
          "SevenZip",
          "GZip"
        ],
        "enum": [
          0,
          10,
          20,
          30,
          40,
          50,
          51,
          52,
          53,
          54
        ]
      },
      "TaskModel": {
        "type": "object",
        "description": "A model containing information about the task.",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Gets or sets the created date.",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Gets or sets the modified date.",
            "format": "date-time"
          },
          "status": {
            "description": "Gets or sets the status.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaskStatus"
              }
            ]
          },
          "message": {
            "type": "string",
            "description": "Gets or sets the message describing the error.",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "description": "Gets or sets the position in queue.",
            "format": "int32"
          },
          "progress": {
            "type": "integer",
            "description": "Gets or sets the progress (0-100).",
            "format": "int32"
          },
          "command": {
            "description": "Gets or sets the command used to create this task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseCommand"
              }
            ]
          },
          "result": {
            "description": "Gets or sets the result associated with this task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseResultModel"
              }
            ]
          },
          "object": {
            "description": "Gets or sets the object associated with this task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ObjectModel"
              }
            ]
          }
        }
      },
      "TaskStatus": {
        "type": "integer",
        "description": "The different states of a task.",
        "x-enumNames": [
          "Created",
          "Queued",
          "Processing",
          "Canceled",
          "Failed",
          "Finished"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "BaseCommand": {
        "type": "object",
        "discriminator": {
          "propertyName": "discriminator",
          "mapping": {
            "BaseProcessCommand`1": "#/components/schemas/BaseProcessCommandOfProcessResultModel",
            "ProcessObjectCommand": "#/components/schemas/ProcessObjectCommand",
            "ProcessPathCommand": "#/components/schemas/ProcessPathCommand"
          }
        },
        "description": "The base all commands have in common.",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "discriminator"
        ],
        "properties": {
          "discriminator": {
            "type": "string"
          }
        }
      },
      "ProcessObjectCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseProcessCommandOfProcessResultModel"
          },
          {
            "type": "object",
            "description": "A command containing information needed to process objects.",
            "additionalProperties": false,
            "properties": {
              "commandType": {
                "description": "Gets the type of the command.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CommandType"
                  }
                ]
              },
              "id": {
                "type": "string",
                "description": "Gets or sets the identifier of the object.",
                "nullable": true
              }
            }
          }
        ]
      },
      "CommandType": {
        "type": "integer",
        "description": "A type to describe the command.",
        "x-enumNames": [
          "Unknown",
          "ProcessPathCommand",
          "ProcessObjectCommand"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "BaseProcessCommandOfProcessResultModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseCommand"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "desiredSize": {
                "type": "integer",
                "format": "int32"
              },
              "amountPerAxis": {
                "type": "integer",
                "format": "int32"
              },
              "axisTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/AxisType"
                }
              },
              "imageFormat": {
                "$ref": "#/components/schemas/ImageFormat"
              },
              "bezierEasingTypePerAxis": {
                "$ref": "#/components/schemas/BezierEasingType"
              },
              "bezierEasingTypeCombined": {
                "$ref": "#/components/schemas/BezierEasingType"
              },
              "grayscale": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "AxisType": {
        "type": "integer",
        "description": "The different axis types of the coordinate system.",
        "x-enumNames": [
          "X",
          "Y",
          "Z"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "ImageFormat": {
        "type": "integer",
        "description": "A type to describe the image format.",
        "x-enumNames": [
          "Unknown",
          "Jpeg",
          "Png"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "BezierEasingType": {
        "type": "integer",
        "description": "A type to describe the Bézier curve easing.",
        "x-enumNames": [
          "None",
          "Linear",
          "EaseInCubic",
          "EaseOutCubic",
          "EaseInOutCubic",
          "EaseInQuart",
          "EaseOutQuart",
          "EaseInOutQuart"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ]
      },
      "ProcessPathCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseProcessCommandOfProcessResultModel"
          },
          {
            "type": "object",
            "description": "A command containing information needed to process paths (directory, file, url, etc.).",
            "additionalProperties": false,
            "properties": {
              "commandType": {
                "description": "Gets the type of the command.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CommandType"
                  }
                ]
              },
              "sourcePath": {
                "type": "string",
                "description": "Gets or sets the source path.",
                "nullable": true
              },
              "watermarkSourcePath": {
                "type": "string",
                "description": "Gets or sets the source path of the watermark.",
                "nullable": true
              },
              "destinationPath": {
                "type": "string",
                "description": "Gets or sets the destination path.",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseResultModel": {
        "type": "object",
        "discriminator": {
          "propertyName": "discriminator",
          "mapping": {
            "ResultModel": "#/components/schemas/ResultModel",
            "ProcessResultModel": "#/components/schemas/ProcessResultModel"
          }
        },
        "description": "The base all results have in common.",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "discriminator"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "nullable": true
          },
          "discriminator": {
            "type": "string"
          }
        }
      },
      "ProcessResultModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResultModel"
          },
          {
            "type": "object",
            "description": "A model containing information about the result of the image processing.",
            "additionalProperties": false,
            "properties": {
              "resultType": {
                "$ref": "#/components/schemas/ResultType"
              },
              "labelCount": {
                "type": "integer",
                "description": "Gets or sets the label count.",
                "format": "int32"
              },
              "images": {
                "type": "array",
                "description": "Gets or sets the images.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PositionAxisContainerModelOfString"
                }
              },
              "gifs": {
                "type": "array",
                "description": "Gets or sets the axis containers of the GIF images.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/AxisContainerModelOfString"
                }
              },
              "combinedGif": {
                "type": "string",
                "description": "Gets or sets the combined GIF.",
                "nullable": true
              }
            }
          }
        ]
      },
      "ResultType": {
        "type": "integer",
        "description": "A type to describe the command.",
        "x-enumNames": [
          "Unknown",
          "ProcessResult"
        ],
        "enum": [
          0,
          1
        ]
      },
      "PositionAxisContainerModelOfString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AxisContainerModelOfString"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "position": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "AxisContainerModelOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "axisType": {
            "$ref": "#/components/schemas/AxisType"
          },
          "entity": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResultModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResultModel"
          },
          {
            "type": "object",
            "description": "A model containing information about the result of the processing.",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "createdDate": {
                "type": "string",
                "description": "Gets or sets the created date.",
                "format": "date-time"
              },
              "modifiedDate": {
                "type": "string",
                "description": "Gets or sets the modified date.",
                "format": "date-time"
              },
              "version": {
                "type": "string",
                "description": "Gets or sets the application version.",
                "nullable": true
              },
              "jsonFilename": {
                "type": "string",
                "description": "Gets or sets the JSON filename.",
                "nullable": true
              }
            }
          }
        ]
      },
      "PaginationModel": {
        "type": "object",
        "description": "A model containing information about the pagination.",
        "additionalProperties": false,
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Gets or sets the limit to constrain the number of items.",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "description": "Gets or sets the total amount of items.",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "Gets or sets the current page number.",
            "format": "int32"
          }
        }
      },
      "Stream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MarshalByRefObject"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "canTimeout": {
                "type": "boolean"
              },
              "readTimeout": {
                "type": "integer",
                "format": "int32"
              },
              "writeTimeout": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "MarshalByRefObject": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "CreateTaskCommand": {
        "type": "object",
        "description": "A command containing information needed to create a task.",
        "additionalProperties": false,
        "properties": {
          "command": {
            "description": "Gets or sets the command used to create this task.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BaseCommand"
              }
            ]
          }
        }
      }
    }
  }
}